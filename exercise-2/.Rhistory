# Install and load the "dplyr" library
install.packages("dplyr")
library(dplyr)
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
View(fueleconomy::vehicles)
select(fueleconomy::vehicles, make)
# Use the `distinct()` function to determine how many different car manufacturers
# are represented by the data set
distinct(fueleconomy::vehicles, make)
# Filter the data set for vehicles manufactured in 1997
filter(fueleconomy::vehicles, year=1997)
# Filter the data set for vehicles manufactured in 1997
filter(fueleconomy::vehicles, year == 1997)
# Arrange the 1997 cars by highway (`hwy`) gas milage
arrange(fueleconomy::vehicles, hwy)
# Arrange the 1997 cars by highway (`hwy`) gas milage
arrange(car1997, hwy)
# Filter the data set for vehicles manufactured in 1997
car1997 <- filter(fueleconomy::vehicles, year == 1997)
# Arrange the 1997 cars by highway (`hwy`) gas milage
arrange(car1997, hwy)
# Arrange the 1997 cars by highway (`hwy`) gas milage
arrange(car1997, hwy)
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
mutate(car1997, average=(cty+hwy)/2)
View(car1997)
# Load the data table called Titanic
data("Titanic")
# check the data table called Titanic whether it is data table or not
is.data.frame(Titanic)
# convert the Titanic variable into a data frame
Titanic <- data.frame(Titanic, stringsAsFactors = FALSE)
# create a variable called children that are the rows of the data frame
# with information about children on the Titanic.
children <- Titanic[Titanic$Age == "Child",]
# create a variable children.num that is
# the total number of children on the Titanic.
# and print it out
children.num <- sum(Titanic$Freq)
print(children.num)
# print the row in the overall Titanic data frame
# which has the largest absolute number of losses
# among people who didn't survive
# data frame for victims of Titanic
victims.titanic <- Titanic[Titanic$Survived == "No",]
# clean the data frame that can show the area that the result we want
max.victims <- victims.titanic[victims.titanic$Freq == max(victims.titanic$Freq),]
View(max.victims)
?filter
?filter_
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
filter(filter(fueleconomy::vehicles, drive == "2-Wheel Drive vehicles"), cty > 20)
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
filter(filter(fueleconomy::vehicles, drive == "2-Wheel Drive vehicles"), cty > 20)
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
two.wheel<- filter(fueleconomy::vehicles, drive == "2-Wheel Drive vehicles")
filter(two.wheel, cty > 20)
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
two.wheel<- filter(fueleconomy::vehicles, drive == "2-Wheel Drive vehicles")
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
two.wheel<- filter(fueleconomy::vehicles, drive == "2-Wheel Drive")
filter(two.wheel, cty > 20)
View(victims.titanic)
# Install (if needed) and load the "fueleconomy" package
install.packages('devtools')
install.packages("devtools")
# Install (if needed) and load the "dplyr" library
install.packages("dplyr")
library(dplyr)
# Print the survival rate by each class.
SurvivalRate("1st")
SurvivalRate("2nd")
# SurvivalRate that takes in a ticket class (e.g., "1st", "2nd") as an argument
# and return a sentence describing the survival rate of (adult) men vs. "women and children" in that ticketing class.
SurvivalRate <- function (ticket.class) {
survivor <- Titanic[Titanic$Survived == "Yes" & Titanic$Class == ticket.class,]
survivor.class.male <- survivor[survivor$Sex == "Male",]
survivor.class.male.adult <- survivor.class.male[survivor.class.male$Age == "Adult",]
survivor.class.total.sum <- sum(survivor$Freq)
survivor.class.male.adult.sum <- sum(survivor.class.male.adult$Freq)
percent.male.adult <- round((survivor.class.male.adult.sum / survivor.class.total.sum) * 100, 0)
percent.others <- 100 - percent.male.adult
sentence <- paste("Of", ticket.class, "class,", paste0(percent.male.adult, "% of men survived and"), paste0(percent.others, "% of women and children survived."))
return (sentence) # return String
}
# Print the survival rate by each class.
SurvivalRate("1st")
SurvivalRate("2nd")
SurvivalRate("3rd")
#################
#### PART 1 #####
#################
# Create a vector, names, with the names of the 6 TAs in the course
names <- c("Adele Miller", "Anirudh Subramanyam",
"Zhanna Voloshina", "Tejveer Rai",
"Bao Dinh", " Iris Sun")
# Create a vector, math.grades, with
# 6 hypothetical grades (0 - 100) in a math course
math.grades <- c(90, 80, 95, 78, 87, 65)
# Create a vector, spanish.grades, with
# 6 hypothetical grades (0 - 100) in a Spanish course
spanish.grades <- c(65, 86, 97, 88, 55, 94)
# Make the data frame for math grades and spanish grades of TAs
tas <- data.frame(names, math.grades, spanish.grades, stringsAsFactors=FALSE)
# Create the variables for making the sentence include the numbers of rows, columns, and the names of each column.
row.number <- nrow(tas)
col.number <- ncol(tas)
col.names <- colnames(tas)
# Print out the sentence using 3 paste function
print(paste(paste("The TA data frame has", row.number,
"rows and", col.number, "cols:"),
paste(col.names, sep="",collapse = ", ")))
# Add the row name using the ventor
row.names(tas) <- names
# Print out the row of the data frame with your TA's grades
tas.fliped <- data.frame(t(tas[-1]))
print(tas.fliped)
# Add the column which has values equal to each TA's math grade
# minus the TA's Spanish grade.
tas$grade.diff <- tas$math.grades - tas$spanish.grades
# Add the column that a boolean (TRUE/FALSE) variable
# that indicates that a TA got a better grade in math
tas$better.at.math <- tas$grade.diff > 0
# Create the variable that counts how many TAs are better at math
num.better.at.math <- nrow(tas[tas$better.at.math == TRUE,])
print(num.better.at.math)
# Write a new csv file that contains the TA's grade data except row's name.
# and save at the folder named data
write.csv(tas, file="data/grade_data.csv", row.names = FALSE)
#################
#### PART 2 #####
#################
# Create the variable that contains the data frame from existed csv file
life.expectancy <- read.csv("data/life_expectancy.csv", stringsAsFactors=FALSE)
# Add a column called change to the data frame that is the change in life expectancy from 1960 to 2013.
life.expectancy$change <- life.expectancy$le_2013 - life.expectancy$le_1960
# Create a variable that has the number of countries whose life expectancy
# has improved by less than 5 years between 1960 and 2013.
# and print it out
num.small.gain <-  nrow(life.expectancy[life.expectancy$change < 5,])
print(num.small.gain)
# Create a variable is the name of the country
# with the largest gain in life expectancy
most.improved <- life.expectancy[life.expectancy$change == max(life.expectancy$change),'country']
print(most.improved)
# Define a function that takes in a country's name and
# returns that country's change in life expectancy from 1960 to 2013
CountryChange <- function(country.name) {
return (life.expectancy[life.expectancy$country == country.name, 'change'])
}
# Print out the life expectancy of Haiti
# using the function called CountryChange
CountryChange('Haiti')
# Write a function called LowestLifeExpInRegion
# that takes in a region as an argument,
# and returns the name of the country with the lowest life expectancy in 2013 (in that region)
LowestLifeExpInRegion <- function (region.name){
countries.in.region <- life.expectancy[life.expectancy$region == region.name,]
lowest.life.exp.country <- countries.in.region[countries.in.region$le_2013 == min(countries.in.region$le_2013), "country"]
return (lowest.life.exp.country)
}
# Print out the country with the lowest life expectancy in 2013
# in Latin America and the Caribbean.
LowestLifeExpInRegion("Latin America & Caribbean")
# Define a function that takes in two country names as arguments,
# and returns a data frame representing a table of those two country's life expectancies in 2013
# and the change since 1960.
CompareCountries <- function (first.country.name, second.country.name){
compare.countries <- subset(life.expectancy, country == first.country.name | country == second.country.name, select = c("country", "le_2013", "change"))
return (compare.countries)
}
# Print out the comparison between the life expectancy changes
# of the United States and Cuba
us.vs.cuba <- CompareCountries("United States", "Cuba")
#################
#### PART 3 #####
#################
# Load the data table called Titanic
data("Titanic")
# check the data table called Titanic whether it is data table or not
is.data.frame(Titanic)
# convert the Titanic variable into a data frame
Titanic <- data.frame(Titanic, stringsAsFactors = FALSE)
# create a variable called children that are the rows of the data frame
# with information about children on the Titanic.
children <- Titanic[Titanic$Age == "Child",]
# create a variable children.num that is
# the total number of children on the Titanic.
# and print it out
children.num <- sum(Titanic$Freq)
print(children.num)
# print the row in the overall Titanic data frame
# which has the largest absolute number of losses
# among people who didn't survive
# data frame for victims of Titanic
victims.titanic <- Titanic[Titanic$Survived == "No",]
# clean the data frame that can show the area that the result we want
max.victims <- victims.titanic[victims.titanic$Freq == max(victims.titanic$Freq),]
print(max.victims)
# What does the "Class" of this row tell you about how the ship was evacuated?
# It means that lots of crew members of Titanic died when the ship was evacuated.
#
# SurvivalRate that takes in a ticket class (e.g., "1st", "2nd") as an argument
# and return a sentence describing the survival rate of (adult) men vs. "women and children" in that ticketing class.
SurvivalRate <- function (ticket.class) {
survivor <- Titanic[Titanic$Survived == "Yes" & Titanic$Class == ticket.class,]
survivor.class.male <- survivor[survivor$Sex == "Male",]
survivor.class.male.adult <- survivor.class.male[survivor.class.male$Age == "Adult",]
survivor.class.total.sum <- sum(survivor$Freq)
survivor.class.male.adult.sum <- sum(survivor.class.male.adult$Freq)
percent.male.adult <- round((survivor.class.male.adult.sum / survivor.class.total.sum) * 100, 0)
percent.others <- 100 - percent.male.adult
sentence <- paste("Of", ticket.class, "class,", paste0(percent.male.adult, "% of men survived and"), paste0(percent.others, "% of women and children survived."))
return (sentence) # return String
}
# Print the survival rate by each class.
SurvivalRate("1st")
SurvivalRate("2nd")
SurvivalRate("3rd")
# What does this data tell you about how the "women and children first" policy was applied across social classes?
# According to the result of the function called SurvivalRate which calculated the survival rate by Male and Female and children
# and class, only 28% of men among the survivors stayed at the 1st class survived from the tregedy. More surprisingly,
#
#
#
source('~/Desktop/info201/a3-using-data-witchperson/Assignment.R', echo=TRUE)
#################
#### PART 1 #####
#################
# Create a vector, names, with the names of the 6 TAs in the course
names <- c("Adele Miller", "Anirudh Subramanyam",
"Zhanna Voloshina", "Tejveer Rai",
"Bao Dinh", " Iris Sun")
# Create a vector, math.grades, with
# 6 hypothetical grades (0 - 100) in a math course
math.grades <- c(90, 80, 95, 78, 87, 65)
# Create a vector, spanish.grades, with
# 6 hypothetical grades (0 - 100) in a Spanish course
spanish.grades <- c(65, 86, 97, 88, 55, 94)
# Make the data frame for math grades and spanish grades of TAs
tas <- data.frame(names, math.grades, spanish.grades, stringsAsFactors=FALSE)
# Create the variables for making the sentence include the numbers of rows, columns, and the names of each column.
row.number <- nrow(tas)
col.number <- ncol(tas)
col.names <- colnames(tas)
# Print out the sentence using 3 paste function
print(paste(paste("The TA data frame has", row.number,
"rows and", col.number, "cols:"),
paste(col.names, sep="",collapse = ", ")))
# Add the row name using the ventor
row.names(tas) <- names
# Print out the row of the data frame with your TA's grades
tas.fliped <- data.frame(t(tas[-1]))
print(tas.fliped)
# Add the column which has values equal to each TA's math grade
# minus the TA's Spanish grade.
tas$grade.diff <- tas$math.grades - tas$spanish.grades
# Add the column that a boolean (TRUE/FALSE) variable
# that indicates that a TA got a better grade in math
tas$better.at.math <- tas$grade.diff > 0
# Create the variable that counts how many TAs are better at math
num.better.at.math <- nrow(tas[tas$better.at.math == TRUE,])
print(num.better.at.math)
# Write a new csv file that contains the TA's grade data except row's name.
# and save at the folder named data
write.csv(tas, file="data/grade_data.csv", row.names = FALSE)
#################
#### PART 2 #####
#################
# Create the variable that contains the data frame from existed csv file
life.expectancy <- read.csv("data/life_expectancy.csv", stringsAsFactors=FALSE)
# Add a column called change to the data frame that is the change in life expectancy from 1960 to 2013.
life.expectancy$change <- life.expectancy$le_2013 - life.expectancy$le_1960
# Create a variable that has the number of countries whose life expectancy
# has improved by less than 5 years between 1960 and 2013.
# and print it out
num.small.gain <-  nrow(life.expectancy[life.expectancy$change < 5,])
print(num.small.gain)
# Create a variable is the name of the country
# with the largest gain in life expectancy
most.improved <- life.expectancy[life.expectancy$change == max(life.expectancy$change),'country']
print(most.improved)
# Define a function that takes in a country's name and
# returns that country's change in life expectancy from 1960 to 2013
CountryChange <- function(country.name) {
return (life.expectancy[life.expectancy$country == country.name, 'change'])
}
# Print out the life expectancy of Haiti
# using the function called CountryChange
CountryChange('Haiti')
# Write a function called LowestLifeExpInRegion
# that takes in a region as an argument,
# and returns the name of the country with the lowest life expectancy in 2013 (in that region)
LowestLifeExpInRegion <- function (region.name){
countries.in.region <- life.expectancy[life.expectancy$region == region.name,]
lowest.life.exp.country <- countries.in.region[countries.in.region$le_2013 == min(countries.in.region$le_2013), "country"]
return (lowest.life.exp.country)
}
# Print out the country with the lowest life expectancy in 2013
# in Latin America and the Caribbean.
LowestLifeExpInRegion("Latin America & Caribbean")
# Define a function that takes in two country names as arguments,
# and returns a data frame representing a table of those two country's life expectancies in 2013
# and the change since 1960.
CompareCountries <- function (first.country.name, second.country.name){
compare.countries <- subset(life.expectancy, country == first.country.name | country == second.country.name, select = c("country", "le_2013", "change"))
return (compare.countries)
}
# Print out the comparison between the life expectancy changes
# of the United States and Cuba
us.vs.cuba <- CompareCountries("United States", "Cuba")
#################
#### PART 3 #####
#################
# Load the data table called Titanic
data("Titanic")
# check the data table called Titanic whether it is data table or not
is.data.frame(Titanic)
# convert the Titanic variable into a data frame
Titanic <- data.frame(Titanic, stringsAsFactors = FALSE)
# create a variable called children that are the rows of the data frame
# with information about children on the Titanic.
children <- Titanic[Titanic$Age == "Child",]
# create a variable children.num that is
# the total number of children on the Titanic.
# and print it out
children.num <- sum(Titanic$Freq)
print(children.num)
# print the row in the overall Titanic data frame
# which has the largest absolute number of losses
# among people who didn't survive
# data frame for victims of Titanic
victims.titanic <- Titanic[Titanic$Survived == "No",]
# clean the data frame that can show the area that the result we want
max.victims <- victims.titanic[victims.titanic$Freq == max(victims.titanic$Freq),]
print(max.victims)
# What does the "Class" of this row tell you about how the ship was evacuated?
# It means that lots of crew members of Titanic died when the ship was evacuated.
#
# SurvivalRate that takes in a ticket class (e.g., "1st", "2nd") as an argument
# and return a sentence describing the survival rate of (adult) men vs. "women and children" in that ticketing class.
SurvivalRate <- function (ticket.class) {
survivor <- Titanic[Titanic$Survived == "Yes" & Titanic$Class == ticket.class,]
survivor.class.male <- survivor[survivor$Sex == "Male",]
survivor.class.male.adult <- survivor.class.male[survivor.class.male$Age == "Adult",]
survivor.class.total.sum <- sum(survivor$Freq)
survivor.class.male.adult.sum <- sum(survivor.class.male.adult$Freq)
percent.male.adult <- round((survivor.class.male.adult.sum / survivor.class.total.sum) * 100, 0)
percent.others <- 100 - percent.male.adult
sentence <- paste("Of", ticket.class, "class,", paste0(percent.male.adult, "% of men survived and"), paste0(percent.others, "% of women and children survived."))
return (sentence) # return String
}
# Print the survival rate by each class.
SurvivalRate("1st")
SurvivalRate("2nd")
SurvivalRate("3rd")
# What does this data tell you about how the "women and children first" policy was applied across social classes?
# According to the result of the function called SurvivalRate which calculated the survival rate by Male and Female and children
# and class, only 28% of men among the survivors stayed at the 1st class survived from the tregedy. More surprisingly,
#
#
#
# SurvivalRate that takes in a ticket class (e.g., "1st", "2nd") as an argument
# and return a sentence describing the survival rate of (adult) men vs. "women and children" in that ticketing class.
SurvivalRate <- function (ticket.class) {
# sort survivors and given class name using Titanic data frame
survivor <- Titanic[Titanic$Survived == "Yes" & Titanic$Class == ticket.class,]
# sort the male survivor the data frame with survivors and given class name
survivor.class.male <- survivor[survivor$Sex == "Male" & survivor$Age == "Adult",]
survivor.class.total.sum <- sum(survivor$Freq)
survivor.class.male.adult.sum <- sum(survivor.class.male.adult$Freq)
percent.male.adult <- round((survivor.class.male.adult.sum / survivor.class.total.sum) * 100, 0)
percent.others <- 100 - percent.male.adult
sentence <- paste("Of", ticket.class, "class,", paste0(percent.male.adult, "% of men survived and"), paste0(percent.others, "% of women and children survived."))
return (sentence) # return String
}
# Print the survival rate by each class.
SurvivalRate("1st")
SurvivalRate("2nd")
# sort survivors and given class name using Titanic data frame
survivor <- Titanic[Titanic$Survived == "Yes" & Titanic$Class == ticket.class,]
# sort the male survivor the data frame with survivors and given class name
survivor.class.male <- survivor[survivor$Sex == "Male" & survivor$Age == "Adult",]
survivor.class.total.sum <- sum(survivor$Freq)
survivor.class.male.adult.sum <- sum(survivor.class.male.adult$Freq)
# SurvivalRate that takes in a ticket class (e.g., "1st", "2nd") as an argument
# and return a sentence describing the survival rate of (adult) men vs. "women and children" in that ticketing class.
SurvivalRate <- function (ticket.class) {
# sort survivors and given class name using Titanic data frame
survivor <- Titanic[Titanic$Survived == "Yes" & Titanic$Class == ticket.class,]
# sort the male survivor the data frame with survivors and given class name
survivor.class.male <- survivor[survivor$Sex == "Male" & survivor$Age == "Adult",]
survivor.class.total.sum <- sum(survivor$Freq)
survivor.class.male.adult.sum <- sum(survivor.class.male.adult$Freq)
percent.male.adult <- round((survivor.class.male.adult.sum / survivor.class.total.sum) * 100, 0)
percent.others <- 100 - percent.male.adult
sentence <- paste("Of", ticket.class, "class,", paste0(percent.male.adult, "% of men survived and"), paste0(percent.others, "% of women and children survived."))
return (sentence) # return String
}
# Print the survival rate by each class.
SurvivalRate("1st")
# sort the male survivor the data frame with survivors and given class name
survivor.class.male <- survivor[survivor$Sex == "Male" & survivor$Age == "Adult",]
survivor.class.total.sum <- sum(survivor$Freq)
survivor.class.male.adult.sum <- sum(survivor.class.male$Freq)
# sort survivors and given class name using Titanic data frame
survivor <- Titanic[Titanic$Survived == "Yes" & Titanic$Class == ticket.class,]
# sort the male survivor the data frame with survivors and given class name
survivor.class.male <- survivor[survivor$Sex == "Male" & survivor$Age == "Adult",]
survivor.class.total.sum <- sum(survivor$Freq)
survivor.class.male.adult.sum <- sum(survivor.class.male$Freq)
percent.male.adult <- round((survivor.class.male.adult.sum / survivor.class.total.sum) * 100, 0)
percent.others <- 100 - percent.male.adult
sentence <- paste("Of", ticket.class, "class,", paste0(percent.male.adult, "% of men survived and"), paste0(percent.others, "% of women and children survived."))
return (sentence) # return String
# SurvivalRate that takes in a ticket class (e.g., "1st", "2nd") as an argument
# and return a sentence describing the survival rate of (adult) men vs. "women and children" in that ticketing class.
SurvivalRate <- function (ticket.class) {
# sort survivors and given class name using Titanic data frame
survivor <- Titanic[Titanic$Survived == "Yes" & Titanic$Class == ticket.class,]
# sort the male survivor the data frame with survivors and given class name
survivor.class.male <- survivor[survivor$Sex == "Male" & survivor$Age == "Adult",]
survivor.class.total.sum <- sum(survivor$Freq)
survivor.class.male.adult.sum <- sum(survivor.class.male$Freq)
percent.male.adult <- round((survivor.class.male.adult.sum / survivor.class.total.sum) * 100, 0)
percent.others <- 100 - percent.male.adult
sentence <- paste("Of", ticket.class, "class,", paste0(percent.male.adult, "% of men survived and"), paste0(percent.others, "% of women and children survived."))
return (sentence) # return String
}
# Print the survival rate by each class.
SurvivalRate("1st")
SurvivalRate("2nd")
# Create a vector, names, with the names of the 6 TAs in the course
names <- c("Adele Miller", "Anirudh Subramanyam",
"Zhanna Voloshina", "Tejveer Rai",
"Bao Dinh", " Iris Sun")
# Create a vector, math.grades, with
# 6 hypothetical grades (0 - 100) in a math course
math.grades <- c(90, 80, 95, 78, 87, 65)
# Create a vector, spanish.grades, with
# 6 hypothetical grades (0 - 100) in a Spanish course
spanish.grades <- c(65, 86, 97, 88, 55, 94)
# Make the data frame for math grades and spanish grades of TAs
tas <- data.frame(names, math.grades, spanish.grades, stringsAsFactors=FALSE)
View(tas)
# Print out the row of the data frame with your TA's grades
my.ta.grade<- tas[tas$names == "Tejveer Rai",]
print(my.ta.grade)
View(my.ta.grade)
# Load the data table called Titanic
data("Titanic")
# check the data table called Titanic whether it is data table or not
is.data.frame(Titanic)
# convert the Titanic variable into a data frame
Titanic <- data.frame(Titanic, stringsAsFactors = FALSE)
# create a variable called children that are the rows of the data frame
# with information about children on the Titanic.
children <- Titanic[Titanic$Age == "Child",]
# create a variable children.num that is
# the total number of children on the Titanic.
# and print it out
children.num <- sum(Titanic$Freq)
print(children.num)
# print the row in the overall Titanic data frame
# which has the largest absolute number of losses
# among people who didn't survive
# data frame for victims of Titanic
victims.titanic <- Titanic[Titanic$Survived == "No",]
# clean the data frame that can show the area that the result we want
max.victims <- victims.titanic[victims.titanic$Freq == max(victims.titanic$Freq),]
print(max.victims)
View(max.victims)
# SurvivalRate that takes in a ticket class (e.g., "1st", "2nd") as an argument
# and return a sentence describing the survival rate of (adult) men vs. "women and children" in that ticketing class.
SurvivalRate <- function (ticket.class) {
# sort survivors and given class name using Titanic data frame
survivor <- Titanic[Titanic$Survived == "Yes" & Titanic$Class == ticket.class,]
# sort the male adult survivor the data frame with survivors and given class name
survivor.class.male <- survivor[survivor$Sex == "Male" & survivor$Age == "Adult",]
# calculate the sum of survivor
survivor.class.total.sum <- sum(survivor$Freq)
# calculate the sum of male and adult survivor
survivor.class.male.adult.sum <- sum(survivor.class.male$Freq)
# calculate the percentage of male and adult survivor
percent.male.adult <- round((survivor.class.male.adult.sum / survivor.class.total.sum) * 100, 0)
# calculate the percentage of female and children survivor
percent.others <- 100 - percent.male.adult
# create the variable including a sentence describing the survival rate of (adult) men vs. "women and children"
sentence <- paste("Of", ticket.class, "class,", paste0(percent.male.adult, "% of men survived and"), paste0(percent.others, "% of women and children survived."))
return (sentence) # return the sentence
}
# Print the survival rate by each class.
SurvivalRate("1st")
SurvivalRate("2nd")
SurvivalRate("3rd")
setwd("~/Desktop/info201/ch11-apis/exercise-2")
# Use `source()` to load your API key variable from the `apikey.R` file you made.
# Make sure you've set your working directory!
source("apikey.R")
api.key
